name: Release (npm + Docker + GitHub)

on:
  push:
    tags:
      - "v*"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
      is_prerelease: ${{ steps.meta.outputs.is_prerelease }}
    steps:
      - uses: actions/checkout@v4
      - id: meta
        run: |
          VERSION="${GITHUB_REF##*/}"
          VERSION="${VERSION#v}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          if [[ "$VERSION" == *-* ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi

  npm:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"
      - name: Set package.json version
        run: |
          jq '.version = "${{ needs.prepare.outputs.version }}"' package.json > package.json.tmp && mv package.json.tmp package.json
      - run: npm ci
      - run: npm test --silent
      - name: Publish pre-release to npm with dist-tag "next"
        if: needs.prepare.outputs.is_prerelease == 'true'
        run: npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish stable to npm with dist-tag "latest"
        if: needs.prepare.outputs.is_prerelease != 'true'
        run: npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Compute Docker tags
        id: tags
        shell: bash
        run: |
          VERSION="${{ needs.prepare.outputs.version }}"
          IS_PRERELEASE="${{ needs.prepare.outputs.is_prerelease }}"
          TAGS="poisonite/makemkv-auto-rip:${VERSION}"
          TAGS+=$'\npoisonite/makemkv-auto-rip:edge'
          if [[ "$IS_PRERELEASE" == "true" ]]; then
            TAGS+=$'\npoisonite/makemkv-auto-rip:next'
          else
            TAGS+=$'\npoisonite/makemkv-auto-rip:latest'
          fi
          {
            echo "tags<<EOF"
            echo "$TAGS"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            MAKEMKV_VERSION=1.18.1
          tags: ${{ steps.tags.outputs.tags }}

  github-release:
    needs: [prepare, npm, docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build release notes from CHANGELOG.md
        shell: bash
        run: |
          VERSION="${{ needs.prepare.outputs.version }}"
          # Extract the section starting at "## [VERSION]" until the next "## " heading or end of file
          awk -v ver="$VERSION" '
            BEGIN { found=0 }
            /^##[[:space:]]+/ {
              if (found==1) exit
            }
            { if (found==1) print }
            $0 ~ "^##[[:space:]]*\\[" ver "\\]" { found=1; print }
          ' CHANGELOG.md > RELEASE_NOTES.md || true

          # Fallback if no matching section was found
          if [ ! -s RELEASE_NOTES.md ]; then
            printf "## [%s]\n\nRelease notes are not available in CHANGELOG for this version.\n" "$VERSION" > RELEASE_NOTES.md
          fi

          echo "Generated RELEASE_NOTES.md:" && echo "-----" && cat RELEASE_NOTES.md && echo "-----"
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.prepare.outputs.version }}
          name: MakeMKV Auto Rip v${{ needs.prepare.outputs.version }}
          draft: false
          prerelease: ${{ needs.prepare.outputs.is_prerelease == 'true' }}
          body_path: RELEASE_NOTES.md
